import datetime
import telebot.types

from peewee import IntegrityError
from telebot import StateMemoryStorage, TeleBot
from telebot import types
from telebot.custom_filters import StateFilter
from telebot.types import BotCommand, Message
from models import User, create_models
from config import date_base_path, bot_token


state_storage = StateMemoryStorage()

bot = TeleBot(bot_token, state_storage = state_storage)

@bot.message_handler(commands=["start"])
def start_handler(message: Message) -> None:
    user_id = message.from_user.id
    username = message.from_user.username
    first_name = message.from_user.first_name
    last_name = message.from_user.last_name

    try:
        User.create(
            user_id=user_id,
            username=username,
            first_name=first_name,
            last_name=last_name,

        )

        bot.reply_to(message, f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–∏–∑–Ω–µ—Å-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ {username}!")

    except IntegrityError:
        bot.reply_to(message, f"–†–∞–¥ –≤–∞—Å —Å–Ω–æ–≤–∞ –≤–∏–¥–µ—Ç—å, {first_name}!")


    list_for_comands = [
        '/help ‚Äî –ø–æ–º–æ—â—å –ø–æ –∫–æ–º–∞–Ω–¥–∞–º –±–æ—Ç–∞ üÜò',
        "/low ‚Äî –≤—ã–≤–æ–¥ –º–∏–Ω–∏–º–∞–ª—å–Ω—ã—Ö –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π üìâ",
        "/high ‚Äî –≤—ã–≤–æ–¥ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã—Ö üìà",
        "/custom ‚Äî –≤—ã–≤–æ–¥ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –¥–∏–∞–ø–∞–∑–æ–Ω–∞ üìä",
        "/history ‚Äî –≤—ã–≤–æ–¥ –∏—Å—Ç–æ—Ä–∏–∏ –∑–∞–ø—Ä–æ—Å–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π üìù"
    ]

    keyboard = types.InlineKeyboardMarkup()

    for name in list_for_comands:
        keyboard.add(types.InlineKeyboardButton(name, callback_data="button"))

    bot.send_message(message.chat.id, '\t–í—ã–±–µ—Ä–∏—Ç–µ —á—Ç–æ –≤–∞–º –Ω–∞–¥–æ', reply_markup=keyboard)

@bot.message_handler(commands=["/help"])
def button_message(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)

    item1 = types.KeyboardButton("/help")

    markup.add(item1)

    bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ —á—Ç–æ –≤–∞–º –Ω–∞–¥–æ', reply_markup=markup)

#bot.infinity_polling()
if __name__ == "__main__":
    create_models()
    bot.infinity_polling()


# import telebot
# from telebot import types
# import time
#
# Token = '6739976117:AAHC4mgWcmqS2BHpE-ISGqkAhqHI09_cDh8'
# bot = telebot.TeleBot(Token)
#
#
# @bot.message_handler(commands=['start'])
# def start(m):
#     keyboard = types.InlineKeyboardMarkup()
#
#     for name in ['/help ‚Äî –ø–æ–º–æ—â—å –ø–æ –∫–æ–º–∞–Ω–¥–∞–º –±–æ—Ç–∞', '/low']:
#         keyboard.add(types.InlineKeyboardButton(name, callback_data="button"))
#
#     #keyboard.add(*[types.InlineKeyboardButton(name, callback_data="button") for name in ['/help ‚Äî –ø–æ–º–æ—â—å –ø–æ –∫–æ–º–∞–Ω–¥–∞–º –±–æ—Ç–∞', '/low']])
#
#     # button1 = types.InlineKeyboardButton('–ö–Ω–æ–ø–∫–∞ 1', callback_data='button1')
#     # button2 = types.InlineKeyboardButton('–ö–Ω–æ–ø–∫–∞ 2', callback_data='button2')
#     # keyboard = types.InlineKeyboardMarkup([[button1], [button2]])
#
#     msg = bot.send_message(m.chat.id, '–°–ø–∏—Å–æ–∫ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞:', reply_markup=keyboard)
#
#
# # @bot.message_handler(commands=['start'])
# # def start(m):
# #     keyboard = types.InlineKeyboardMarkup()
# #     keyboard.add(*[types.InlineKeyboardButton(text=name, callback_data=name) for name in ['–ü–æ–∏—Å–∫', '–í—ã–±—Ä–∞—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç']])
# #     msg = bot.send_message(m.chat.id, '–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, —á–µ–º —è –º–æ–≥—É –ø–æ–º–æ—á—å?', reply_markup=keyboard)
#
# if __name__ == "__main__":
#     bot.polling(none_stop=True, interval=0)

 # bot.send_message(
    #     message.chat.id,
    #
    #     "–°–ø–∏—Å–æ–∫ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞: \n"
    #     "/help ‚Äî –ø–æ–º–æ—â—å –ø–æ –∫–æ–º–∞–Ω–¥–∞–º –±–æ—Ç–∞ \n"
    #     "/low ‚Äî –≤—ã–≤–æ–¥ –º–∏–Ω–∏–º–∞–ª—å–Ω—ã—Ö –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π \n"
    #     "/high ‚Äî –≤—ã–≤–æ–¥ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã—Ö \n"
    #     "/custom ‚Äî –≤—ã–≤–æ–¥ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –¥–∏–∞–ø–∞–∑–æ–Ω–∞ \n"
    #     "/history ‚Äî –≤—ã–≤–æ–¥ –∏—Å—Ç–æ—Ä–∏–∏ –∑–∞–ø—Ä–æ—Å–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π",
    #
    #     reply_markup=markup
    # )
    #

    # markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    # markup.add(*[types.KeyboardButton(name) for name in [
    #     "/help ‚Äî –ø–æ–º–æ—â—å –ø–æ –∫–æ–º–∞–Ω–¥–∞–º –±–æ—Ç–∞\n",
    #     "/low ‚Äî –≤—ã–≤–æ–¥ –º–∏–Ω–∏–º–∞–ª—å–Ω—ã—Ö –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π\n",
    #     "/high ‚Äî –≤—ã–≤–æ–¥ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã—Ö",
    #     "/custom ‚Äî –≤—ã–≤–æ–¥ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –¥–∏–∞–ø–∞–∑–æ–Ω–∞",
    #     "/history ‚Äî –≤—ã–≤–æ–¥ –∏—Å—Ç–æ—Ä–∏–∏ –∑–∞–ø—Ä–æ—Å–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"]])