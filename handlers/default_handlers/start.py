import sqlite3
import database

from telebot.types import Message
from loader import bot


@bot.message_handler(commands=["start"])
def bot_start(message: Message) -> None:
    """
        –§—É–Ω–∫—Ü–∏—è start (—Å—Ç–∞—Ä—Ç–æ–≤–æ–µ –æ–∫–Ω–æ) –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é:
        - –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
        - –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–æ–≤—ã–π - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é —Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ–º

    : param user_id : int
    : param username : str
    : param first_name : str
    : param last_name : str
    : return : None

    """

    user_id = message.from_user.id
    username = message.from_user.username
    first_name = message.from_user.first_name
    last_name = message.from_user.last_name

    with sqlite3.connect("database/history.db") as connect:
        cursor = connect.cursor()
        cursor.execute("SELECT chat_id FROM user WHERE chat_id = ?", (user_id,))
        records = cursor.fetchall()

        try:

            if records != [] and records[0][0] == user_id:
                bot.reply_to(
                    message,
                    text=f"–†–∞–¥ –≤–∞—Å —Å–Ω–æ–≤–∞ –≤–∏–¥–µ—Ç—å, <b>{first_name}</b>{last_name}!",
                    parse_mode="html",
                )

            else:
                bot.reply_to(
                    message,
                    text=f"–ü—Ä–∏–≤–µ—Ç, <b>{first_name}</b>{last_name}!\n"
                    f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ - –¥–ª—è –ø–æ–∏—Å–∫–∞ –æ—Ç–µ–ª–µ–π üè©"
                    f"\n–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–æ–π <b><u>/help</u></b> - –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.",
                    parse_mode="html",
                )
                database.add_user_in_database.add_user(
                    message.chat.id,
                    message.from_user.username,
                    message.from_user.full_name,
                )
        except sqlite3.IntegrityError:
            pass
